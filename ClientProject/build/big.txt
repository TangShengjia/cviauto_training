cmake_minimum_required(VERSION 2.8.10)
project(ClientProject)

include_directories(
    ../Common
    ${CMAKE_CURRENT_SOURCE_DIR}/Include
    /usr/include/glib-2.0
    /usr/lib/glib-2.0/include
    /usr/include/gio-unix-2.0
    /usr/lib/x86_64-linux-gnu/glib-2.0/include/
)

link_directories(${CMAKE_CURRENT_BINARY_DIR})

add_executable(client
    Sources/main.cpp
    ../Common/testservice.c
    Sources/TestInfo.cpp
)

find_package(OpenSSL REQUIRED)
if(OpenSSL_FOUND)
    include_directories(${OPENSSL_INCLUDE_DIR})
    target_link_libraries(client ${OPENSSL_LIBRARIES})
endif()

find_package(PkgConfig REQUIRED)
pkg_check_modules(GLIB2 REQUIRED glib-2.0)
pkg_check_modules(GIO2 REQUIRED gio-2.0)

target_include_directories(client PRIVATE
    ${GLIB2_INCLUDE_DIRS}
    ${GIO2_INCLUDE_DIRS}
)
target_link_libraries(client
    ${GLIB2_LIBRARIES} ${GIO2_LIBRARIES}
    pthread gio-2.0 gobject-2.0 gmodule-2.0 gthread-2.0 rt glib-2.0
)

if(CMAKE_BUILD_TYPE STREQUAL "Debug")
    target_compile_options(client PRIVATE -g)
elseif(CMAKE_BUILD_TYPE STREQUAL "Release")
    target_compile_options(client PRIVATE -O2 -s)
endif()
cmake_minimum_required(VERSION 2.8.10)
project(ClientProject)

include_directories(
    ../Common
    ${CMAKE_CURRENT_SOURCE_DIR}/Include
    /usr/include/glib-2.0
    /usr/lib/glib-2.0/include
    /usr/include/gio-unix-2.0
    /usr/lib/x86_64-linux-gnu/glib-2.0/include/
)

link_directories(${CMAKE_CURRENT_BINARY_DIR})

add_executable(client
    Sources/main.cpp
    ../Common/testservice.c
    Sources/TestInfo.cpp
)

find_package(OpenSSL REQUIRED)
if(OpenSSL_FOUND)
    include_directories(${OPENSSL_INCLUDE_DIR})
    target_link_libraries(client ${OPENSSL_LIBRARIES})
endif()

find_package(PkgConfig REQUIRED)
pkg_check_modules(GLIB2 REQUIRED glib-2.0)
pkg_check_modules(GIO2 REQUIRED gio-2.0)

target_include_directories(client PRIVATE
    ${GLIB2_INCLUDE_DIRS}
    ${GIO2_INCLUDE_DIRS}
)
target_link_libraries(client
    ${GLIB2_LIBRARIES} ${GIO2_LIBRARIES}
    pthread gio-2.0 gobject-2.0 gmodule-2.0 gthread-2.0 rt glib-2.0
)

if(CMAKE_BUILD_TYPE STREQUAL "Debug")
    target_compile_options(client PRIVATE -g)
elseif(CMAKE_BUILD_TYPE STREQUAL "Release")
    target_compile_options(client PRIVATE -O2 -s)
endif()
cmake_minimum_required(VERSION 2.8.10)
project(ClientProject)

include_directories(
    ../Common
    ${CMAKE_CURRENT_SOURCE_DIR}/Include
    /usr/include/glib-2.0
    /usr/lib/glib-2.0/include
    /usr/include/gio-unix-2.0
    /usr/lib/x86_64-linux-gnu/glib-2.0/include/
)

link_directories(${CMAKE_CURRENT_BINARY_DIR})

add_executable(client
    Sources/main.cpp
    ../Common/testservice.c
    Sources/TestInfo.cpp
)

find_package(OpenSSL REQUIRED)
if(OpenSSL_FOUND)
    include_directories(${OPENSSL_INCLUDE_DIR})
    target_link_libraries(client ${OPENSSL_LIBRARIES})
endif()

find_package(PkgConfig REQUIRED)
pkg_check_modules(GLIB2 REQUIRED glib-2.0)
pkg_check_modules(GIO2 REQUIRED gio-2.0)

target_include_directories(client PRIVATE
    ${GLIB2_INCLUDE_DIRS}
    ${GIO2_INCLUDE_DIRS}
)
target_link_libraries(client
    ${GLIB2_LIBRARIES} ${GIO2_LIBRARIES}
    pthread gio-2.0 gobject-2.0 gmodule-2.0 gthread-2.0 rt glib-2.0
)

if(CMAKE_BUILD_TYPE STREQUAL "Debug")
    target_compile_options(client PRIVATE -g)
elseif(CMAKE_BUILD_TYPE STREQUAL "Release")
    target_compile_options(client PRIVATE -O2 -s)
endif()
cmake_minimum_required(VERSION 2.8.10)
project(ClientProject)

include_directories(
    ../Common
    ${CMAKE_CURRENT_SOURCE_DIR}/Include
    /usr/include/glib-2.0
    /usr/lib/glib-2.0/include
    /usr/include/gio-unix-2.0
    /usr/lib/x86_64-linux-gnu/glib-2.0/include/
)

link_directories(${CMAKE_CURRENT_BINARY_DIR})

add_executable(client
    Sources/main.cpp
    ../Common/testservice.c
    Sources/TestInfo.cpp
)

find_package(OpenSSL REQUIRED)
if(OpenSSL_FOUND)
    include_directories(${OPENSSL_INCLUDE_DIR})
    target_link_libraries(client ${OPENSSL_LIBRARIES})
endif()

find_package(PkgConfig REQUIRED)
pkg_check_modules(GLIB2 REQUIRED glib-2.0)
pkg_check_modules(GIO2 REQUIRED gio-2.0)

target_include_directories(client PRIVATE
    ${GLIB2_INCLUDE_DIRS}
    ${GIO2_INCLUDE_DIRS}
)
target_link_libraries(client
    ${GLIB2_LIBRARIES} ${GIO2_LIBRARIES}
    pthread gio-2.0 gobject-2.0 gmodule-2.0 gthread-2.0 rt glib-2.0
)

if(CMAKE_BUILD_TYPE STREQUAL "Debug")
    target_compile_options(client PRIVATE -g)
elseif(CMAKE_BUILD_TYPE STREQUAL "Release")
    target_compile_options(client PRIVATE -O2 -s)
endif()
cmake_minimum_required(VERSION 2.8.10)
project(ClientProject)

include_directories(
    ../Common
    ${CMAKE_CURRENT_SOURCE_DIR}/Include
    /usr/include/glib-2.0
    /usr/lib/glib-2.0/include
    /usr/include/gio-unix-2.0
    /usr/lib/x86_64-linux-gnu/glib-2.0/include/
)

link_directories(${CMAKE_CURRENT_BINARY_DIR})

add_executable(client
    Sources/main.cpp
    ../Common/testservice.c
    Sources/TestInfo.cpp
)

find_package(OpenSSL REQUIRED)
if(OpenSSL_FOUND)
    include_directories(${OPENSSL_INCLUDE_DIR})
    target_link_libraries(client ${OPENSSL_LIBRARIES})
endif()

find_package(PkgConfig REQUIRED)
pkg_check_modules(GLIB2 REQUIRED glib-2.0)
pkg_check_modules(GIO2 REQUIRED gio-2.0)

target_include_directories(client PRIVATE
    ${GLIB2_INCLUDE_DIRS}
    ${GIO2_INCLUDE_DIRS}
)
target_link_libraries(client
    ${GLIB2_LIBRARIES} ${GIO2_LIBRARIES}
    pthread gio-2.0 gobject-2.0 gmodule-2.0 gthread-2.0 rt glib-2.0
)

if(CMAKE_BUILD_TYPE STREQUAL "Debug")
    target_compile_options(client PRIVATE -g)
elseif(CMAKE_BUILD_TYPE STREQUAL "Release")
    target_compile_options(client PRIVATE -O2 -s)
endif()
cmake_minimum_required(VERSION 2.8.10)
project(ClientProject)

include_directories(
    ../Common
    ${CMAKE_CURRENT_SOURCE_DIR}/Include
    /usr/include/glib-2.0
    /usr/lib/glib-2.0/include
    /usr/include/gio-unix-2.0
    /usr/lib/x86_64-linux-gnu/glib-2.0/include/
)

link_directories(${CMAKE_CURRENT_BINARY_DIR})

add_executable(client
    Sources/main.cpp
    ../Common/testservice.c
    Sources/TestInfo.cpp
)

find_package(OpenSSL REQUIRED)
if(OpenSSL_FOUND)
    include_directories(${OPENSSL_INCLUDE_DIR})
    target_link_libraries(client ${OPENSSL_LIBRARIES})
endif()

find_package(PkgConfig REQUIRED)
pkg_check_modules(GLIB2 REQUIRED glib-2.0)
pkg_check_modules(GIO2 REQUIRED gio-2.0)

target_include_directories(client PRIVATE
    ${GLIB2_INCLUDE_DIRS}
    ${GIO2_INCLUDE_DIRS}
)
target_link_libraries(client
    ${GLIB2_LIBRARIES} ${GIO2_LIBRARIES}
    pthread gio-2.0 gobject-2.0 gmodule-2.0 gthread-2.0 rt glib-2.0
)

if(CMAKE_BUILD_TYPE STREQUAL "Debug")
    target_compile_options(client PRIVATE -g)
elseif(CMAKE_BUILD_TYPE STREQUAL "Release")
    target_compile_options(client PRIVATE -O2 -s)
endif()
